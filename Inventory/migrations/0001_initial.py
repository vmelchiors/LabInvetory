# Generated by Django 5.2 on 2025-04-07 14:55

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Empréstimo')),
                ('expected_return_date', models.DateTimeField(verbose_name='Data Prevista para Devolução')),
                ('return_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Devolução')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('returned', 'Devolvido'), ('late', 'Atrasado')], default='active', max_length=10, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Empréstimo',
                'verbose_name_plural': 'Empréstimos',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('total_quantity', models.PositiveIntegerField(verbose_name='Quantidade Total')),
                ('available_quantity', models.PositiveIntegerField(verbose_name='Quantidade Disponível')),
                ('location', models.CharField(max_length=100, verbose_name='Localização')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Inventory.category', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materiais',
            },
        ),
        migrations.CreateModel(
            name='LoanItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('returned_quantity', models.PositiveIntegerField(default=0, verbose_name='Quantidade Devolvida')),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Inventory.loan', verbose_name='Empréstimo')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Inventory.material', verbose_name='Material')),
            ],
            options={
                'verbose_name': 'Item de Empréstimo',
                'verbose_name_plural': 'Itens de Empréstimo',
            },
        ),
        migrations.AddField(
            model_name='loan',
            name='materials',
            field=models.ManyToManyField(through='Inventory.LoanItem', to='Inventory.material', verbose_name='Materiais'),
        ),
    ]
